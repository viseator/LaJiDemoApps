package xyz.viseator.v2ex.http;import android.content.Context;import android.os.AsyncTask;import android.support.v7.widget.RecyclerView;import android.util.Log;import org.jsoup.Jsoup;import org.jsoup.helper.DescendableLinkedList;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;import java.io.IOException;import java.util.EmptyStackException;import java.util.List;import cn.bingoogolapple.refreshlayout.BGARefreshLayout;import xyz.viseator.v2ex.data.DetailContent;import xyz.viseator.v2ex.ui.DetailRecyclerViewAdapter;/** * Created by viseator on 2016/11/19. */public class GetHtmlDetailTask extends AsyncTask<String, Void, Document> {    private List<DetailContent> detailContents;    private RecyclerView recyclerView;    private BGARefreshLayout bgaRefreshLayout;    private Context context;    private static final String TAG = "wudi GetHTML";    public GetHtmlDetailTask(RecyclerView recyclerView, Context context, BGARefreshLayout bgaRefreshLayout) {        this.bgaRefreshLayout = bgaRefreshLayout;        this.recyclerView = recyclerView;        this.context = context;    }    @Override    protected Document doInBackground(String... urls) {        Document doc;        try {            doc = Jsoup.connect(urls[0] + "?p=1").get();            return doc;        } catch (IOException e) {            e.printStackTrace();        }        return null;    }    @Override    protected void onPostExecute(Document document) {        detailContents = new DescendableLinkedList<>();        detailContents.add(getMainContent(document));        Elements replyContents = document.select("div.reply_content");        Log.d(TAG, "Got elements:" + String.valueOf(replyContents.size()));        for (Element element : replyContents) {            DetailContent detailContent = new DetailContent();            String text = element.html();            text = text.replaceAll("<br/>", "\n");            text = text.replaceAll("<br>", "");            detailContent.setContent(text);            detailContents.add(detailContent);        }        Elements replyAvatars = document.select("img.avatar");        Elements replyUserName = document.select("strong");        Elements replyTime = document.select("span.fade.small:contains(Ââç)");        for (int i = 0; i < replyAvatars.size(); i++) {            detailContents.get(i).setAvatarURL(replyAvatars.get(i).attr("src"));            if (i > 0) {                detailContents.get(i).setName(replyUserName.get(i).text());                detailContents.get(i).setTime(replyTime.get(i - 1).text());            }        }        recyclerView.setAdapter(new DetailRecyclerViewAdapter(context, detailContents));        bgaRefreshLayout.endRefreshing();    }    private DetailContent getMainContent(Document document) {        StringBuilder topicContent = new StringBuilder();        if (!document.select("div.topic_content:has(p)").isEmpty()) {            Elements mainContent = document.select("div.topic_content p");            if (!mainContent.hasText()) Log.d(TAG, "get nothing");            for (Element element : mainContent) {                topicContent.append(element.text());                topicContent.append("\n\n");            }        } else {            Elements mainContent = document.select("div.topic_content");            topicContent.append(mainContent.text());        }        DetailContent firstContent = new DetailContent();        firstContent.setContent(topicContent.toString());        return firstContent;    }}