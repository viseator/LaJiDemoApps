package xyz.viseator.v2ex.http;import android.content.Context;import android.os.AsyncTask;import android.support.v7.widget.RecyclerView;import android.util.Log;import org.jsoup.Jsoup;import org.jsoup.helper.DescendableLinkedList;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;import java.io.IOException;import java.util.EmptyStackException;import java.util.List;import java.util.regex.Matcher;import java.util.regex.Pattern;import cn.bingoogolapple.refreshlayout.BGARefreshLayout;import xyz.viseator.v2ex.data.DetailContent;import xyz.viseator.v2ex.ui.DetailRecyclerViewAdapter;import xyz.viseator.v2ex.ui.MainRecyclerViewAdapter;/** * Created by viseator on 2016/11/19. */public class GetHtmlDetailTask extends AsyncTask<String, Void, Document> {    private List<DetailContent> detailContents = null;    private RecyclerView recyclerView;    private BGARefreshLayout bgaRefreshLayout;    private Context context;    private int page;    private static final String TAG = "wudi GetHTML";    public GetHtmlDetailTask(RecyclerView recyclerView, Context context, BGARefreshLayout bgaRefreshLayout, int page) {        this.page = page;        this.bgaRefreshLayout = bgaRefreshLayout;        this.recyclerView = recyclerView;        this.context = context;    }    @Override    protected Document doInBackground(String... urls) {        Document doc;        try {            String rawUrl = urls[0];            String newUrl = rawUrl + "?p=" + String.valueOf(page);            for (int i = rawUrl.length() - 1; i >= 0; i--) {                if (rawUrl.charAt(i) == '#') {                    newUrl = rawUrl.substring(0, i) + "?p=" + String.valueOf(page);                    break;                }            }            Log.d(TAG, newUrl);            doc = Jsoup.connect(newUrl).get();            return doc;        } catch (IOException e) {            e.printStackTrace();        }        return null;    }    @Override    protected void onPostExecute(Document document) {        if (recyclerView.getAdapter() == null) {            detailContents = new DescendableLinkedList<>();            detailContents.add(getMainContent(document));        } else {            detailContents = ((DetailRecyclerViewAdapter) recyclerView.getAdapter()).getDetailContents();            Log.d(TAG, "now:" + String.valueOf(detailContents.size()));        }        Elements replyContents = document.select("div.reply_content");        Elements replyAvatars = document.select("img.avatar");        Elements replyUserName = document.select("strong a.dark");        Elements replyTime = document.select("span.fade.small:contains(Ââç)");        Log.d(TAG, String.valueOf(replyContents.size()));        Log.d(TAG, String.valueOf(replyAvatars.size()));        Log.d(TAG, String.valueOf(replyUserName.size()));        Log.d(TAG, String.valueOf(replyTime.size()));        for (int i = 0; i < replyContents.size(); i++) {            DetailContent detailContent = new DetailContent();            String text = replyContents.get(i).html();            text = text.replaceAll("<br/>", "\n");            text = text.replaceAll("<br>", "");            Pattern pattern = Pattern.compile("\n*<.+?>");            Matcher matcher = pattern.matcher(text);            text = matcher.replaceAll("");            detailContent.setContent(text);            detailContent.setAvatarURL(replyAvatars.get(i+1).attr("src"));            detailContent.setName(replyUserName.get(i).text());            detailContent.setTime(replyTime.get(i).text());            detailContents.add(detailContent);        }        if (recyclerView.getAdapter() == null) {            recyclerView.setAdapter(new DetailRecyclerViewAdapter(context, detailContents));            Log.d(TAG, "first:" + String.valueOf(detailContents.size()));        } else {            DetailRecyclerViewAdapter adapter = (DetailRecyclerViewAdapter) recyclerView.getAdapter();            adapter.setDetailContents(detailContents);            adapter.notifyDataSetChanged();            Log.d(TAG, "after:" + String.valueOf(detailContents.size()));        }        bgaRefreshLayout.endRefreshing();        bgaRefreshLayout.endLoadingMore();    }    private DetailContent getMainContent(Document document) {        StringBuilder topicContent = new StringBuilder();        if (!document.select("div.topic_content:has(p)").isEmpty()) {            Elements mainContent = document.select("div.topic_content p");            if (!mainContent.hasText()) Log.d(TAG, "get nothing");            for (Element element : mainContent) {                topicContent.append(element.text());                topicContent.append("\n\n");            }        } else {            Elements mainContent = document.select("div.topic_content");            topicContent.append(mainContent.text());        }        DetailContent firstContent = new DetailContent();        firstContent.setContent(topicContent.toString());        return firstContent;    }}